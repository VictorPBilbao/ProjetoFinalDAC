services:
    # PostgreSQL container
    postgres:
        image: postgres:14-alpine
        container_name: bantads-postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: bantads
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./init-scripts/postgres:/docker-entrypoint-initdb.d
        networks:
            - bantads-network

    # MongoDB container
    mongodb:
        image: mongo:8-noble
        container_name: bantads-mongodb
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongo
            MONGO_INITDB_ROOT_PASSWORD: mongo
        ports:
            - "27017:27017"
        volumes:
            - mongodb-data:/data/db
            - ./init-scripts/mongodb:/docker-entrypoint-initdb.d
        networks:
            - bantads-network

    # RabbitMQ container
    rabbitmq:
        image: rabbitmq:4-management-alpine
        container_name: bantads-rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - bantads-network

    # Client service container
    client-service:
        build:
            context: ./bantads-backend/client-service
            dockerfile: Dockerfile
        container_name: bantads-client-service
        ports:
            - "8081:8081"
        depends_on:
            - postgres
            - rabbitmq
        environment:
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bantads
            SPRING_DATASOURCE_USERNAME: postgres
            SPRING_DATASOURCE_PASSWORD: postgres
            SPRING_RABBITMQ_HOST: rabbitmq
        networks:
            - bantads-network
        restart: on-failure

    auth-service:
        build:
            context: ./bantads-backend/auth-service
            dockerfile: Dockerfile
        container_name: bantads-auth-service
        ports:
            - "8084:8084"
        depends_on:
            - mongodb
            - rabbitmq
        environment:
            SPRING_DATA_MONGODB_HOST: mongodb
            SPRING_DATA_MONGODB_PORT: 27017
            SPRING_DATA_MONGODB_DATABASE: bantads_auth
            SPRING_DATA_MONGODB_USERNAME: mongo
            SPRING_DATA_MONGODB_PASSWORD: mongo
            SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
            JWT_SECRET: your-super-secret-jwt-key-change-in-production-12345
            JWT_EXPIRATION: 86400000
        networks:
            - bantads-network
        restart: on-failure

    # API Gateway
    api-gateway:
        build:
            context: ./bantads-backend/api-gateway
            dockerfile: Dockerfile
        container_name: bantads-api-gateway
        environment:
            PORT: 3000
            CLIENT_SERVICE_URL: http://client-service:8081
            ACCOUNT_SERVICE_URL: http://account-service:8082
            MANAGER_SERVICE_URL: http://manager-service:8083
            AUTH_SERVICE_URL: http://auth-service:8084
            JWT_SECRET: your-super-secret-jwt-key-change-in-production-12345
        ports:
            - "3000:3000"
        depends_on:
            - client-service
            - auth-service
        networks:
            - bantads-network

networks:
    bantads-network:
        driver: bridge

volumes:
    postgres-data:
    mongodb-data:
